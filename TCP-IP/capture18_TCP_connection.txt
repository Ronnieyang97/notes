第十八章 TCP连接的建立与终止
为了建立一条TCP连接：
1）请求段发送一个SYN（同步序号）段指名客户打算连接的服务器的端口和初始序号，该SYN段为报文段1
2）服务器发回包含服务器的初始序号的SYN报文段2作为应答，同时将确认序号设置为客户的ISN加一以对客户的SYN报文段进行确认
3）客户端必须将确认序号设置为服务器的ISN加一以对服务器的SYN报文段3进行确认

TCP是一个双全工，因此每个方向都要单独进行关闭，当一方完成它的数据任务发送后就发送一个FIN（发送方完成数据发送）来终止这个方向的连接，当一端收到一个FIN就通知应用层另一端已经终止数据传送。发送FIN的一方执行主动关闭，接收到FIN的一方执行被动关闭

最大报文段长度MSS表示TCP传往另一端的最大块数据的长度，连接建立时，连接的双方都要通告各自的MSS
TIME_WAIT状态：每个TCP实现必须选择一个报文段最大生成时间MSL，是任何报文段被丢弃前在网络内的最长时间，在2MSL等待期间内，插口中使用的本地端口在默认情况下不能再被使用
在连接处于2SML等待时，任何迟到的报文段将被丢弃，因为处于2SML等待的由该插口对 定义的连接在这段时间内不能再被使用
客户端主动关闭并进入TIME_WAIT是正常的，服务器通常执行被动关闭，不会进入TIME_WAIT状态。终止一个客户端程序并立即重启后，客户端将不能使用相同的本地端口。
对于服务器，因为其使用熟知端口，如果终止一个已经建立连接的服务器程序，并试图重启，服务器程序将不能把它的这个熟知端口赋值给端点。
TCP重启后的MSL内不能建立任何链接，即平静时间

无论何时一个报文段发往基准的连接出现错误，TCP都会发出一个复位报文段。
常见情况是当连接请求到达时，目的端口没有进程正在听，TCP使用复位来处理这样的情况
终止一个连接的正常方式是一方发送FIN，因为在所有排队数据都已经发送后才发送FIN，正常情况下没有任何数据丢失（有序释放）。但也有可能发送一个复位报文段而不是FIN来中途释放一个链接，即异常释放。
异常终止一个链接对应用程序来说有两个优点：丢弃任何待发送数据并立即发送复位报文段；RST的接收方会区分另一端执行的是异常关闭还是正常关闭

如果一方已经关闭或异常终止连接而另一方却还不知道，这样的连接为半打开的

TCP服务器进程是并发的，当连接请求到达服务器时，服务器接受这个请求，并调用一个新的进程来处理这个新的客户请求
TCP使用本地地址和远端地址组成4元组：目的IP地址、目的端口号、源IP地址和源端口号来处理传入的多个连接请求。

一个并发服务器调用新的进程来处理每个客户请求，因为处于被动链接请求的服务始终准备处理下一个呼入的连接请求。当服务器正处于忙时，TCP处理这些呼入的请求：
1）正等待连接请求的一段有一个固定长度的连接队列，该队列中的连接已经被TCP接收但还没有被应用层接受。
2）应用层将指明该队列的最大长度
3）当一个链接请求到达时，TCP使用一个算法，根据当前队列中的连接数来确定是否接收这个连接
4）如果对于新的连接请求，该TCP监听的端点的连接队列中还有空间，TCP模块将对SYN进行确认并完成连接的建立。
5）如果对于新的连接请求，连接队列中已经没有空间，TCP将不理会收到的SYN，也不发回任何报文段，客户的主动打开最终会超时。

