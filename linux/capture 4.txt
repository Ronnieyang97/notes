vim操作
（5）dd 删除一行
（5）yy 复制整行
p 将之前dd或yy的数据黏贴到光标后
/字符串 搜索字符串
？字符串 逆序搜索字符串
n 显示搜索命令定位到的下一个字符串
N 现实搜索命令定位到的上一个字符串
u 撤销上一步
：w 保存
：q 退出
：q！ 强制退出，放弃修改
：wq！ 强制保存退出
：set nu 显示行号
：命令 执行命令
：整数 跳转到该行

批处理脚本后缀为.sh
$0 表示当前程序名
$1-9,${10} 表示对应位置的参数名
$# 表示总共有多少参数
$* 表示所有位置参数的值
$? 判断上一条命令是否成功，成功为0，非0则为失败

测试语句 [操作符 文件或目录名] 测试语句的结果均通过$?的值来显示
-d 测试是否为目录
-e 测试是否存在
-f 判断是否为文件
-r/w/x 测试当前用户是否有权限读取/写入/执行
&& 表示逻辑与
|| 逻辑或
！ 否定
数字
-eq =
-ne !=
-gt >
-lt <
-le <=
-ge >=
字符串
=/！= 是否相等
-z 是否为空

at<时间> 安排一次性任务
crontab -e [-u 用户名] 创建编辑计划任务
crontab -l [-u 用户名] 查看计划任务
crontab -r [-u 用户名] 删除计划任务





